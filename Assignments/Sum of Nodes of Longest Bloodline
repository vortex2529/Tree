class Solution {
  public:
    pair<int,int> height(Node* root){
        if(!root) return{0,0};
        
        if(!root->left && !root->right){
            return {1,root->data};
        }
        
        auto lh = height(root->left);
        auto rh = height(root->right);
        int sum = root->data;
        
        if(lh.first == rh.first){
            sum += lh.second> rh.second? lh.second:rh.second;
        }
        else if(lh.first > rh.first){
            sum += lh.second;
        }
        else{
            sum += rh.second;
        }
        
        return {max(lh.first,rh.first)+1,sum};
        
        
    }
    int sumOfLongRootToLeafPath(Node *root) {
        
        return height(root).second;
        
        
    }
};
